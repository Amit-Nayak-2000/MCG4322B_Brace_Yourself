function [] = StressCalculations(Superior, Inferior, Anterior, Posterior, TorsionalSpring)
% calculates stresses related to superior link
% inputs: ( , )
% output: [ , , , , ]

% description

%% Symbolic Variables
% constants
g = 9.81;

%% Superior Link

% Symbols
% longitudinal forces
syms F_tt F_tn F_scomxlong F_scomylong F_saxlong F_saylong
syms F_spxlong F_spylong F_spring1

% stresses
syms sigma_sx sigma_s1y sigma_s2y sigma_s3y sigma_sbend1 sigma_sbend2
syms tau_s1 tau_s2 tau_s3 sigma_srupture moment_s1 moment_s2

% longitudinal force calculations
F_tt = -Superior.F_t(1)*sind(Superior.theta) + Superior.F_t(2)*cosd(Superior.theta);
F_tn = Superior.F_t(1)*cosd(Superior.theta) + Superior.F_t(2)*sind(Superior.theta);
F_scomxlong = Superior.m*Superior.a(1)*cosd(Superior.theta) + Superior.m*Superior.a(2)*sind(Superior.theta) - Superior.m*g*sind(Superior.theta); 
F_scomylong = -Superior.m*Superior.a(1)*sind(Superior.theta) + Superior.m*Superior.a(2)*cosd(Superior.theta) - Superior.m*g*cosd(Superior.theta);
F_saxlong = Superior.F_sa(1)*cosd(Superior.theta) + Superior.F_sa(2)*sind(Superior.theta);
F_saylong = -Superior.F_sa(1)*sind(Superior.theta) + Superior.F_sa(2)*cosd(Superior.theta);
F_spxlong = Superior.F_sp(1)*cosd(Superior.theta) + Superior.F_sp(2)*sind(Superior.theta);
F_spylong = -Superior.F_sp(1)*sind(Superior.theta) + Superior.F_sp(2)*cosd(Superior.theta);
F_spring1 = -TorsionalSpring.Torque(3)*0.4*Superior.L;

% stress calculations
% along x long
if abs(F_tn) > abs(F_scomxlong + F_saxlong + F_spxlong)
    sigma_sx = F_tn/((Superior.H4-Superior.H3)*Superior.T);
else
    sigma_sx = (F_scomxlong + F_saxlong + F_spxlong)/((Superior.H4-Superior.H3)*Superior.T);
end

% along y long and rupture
if abs(F_tt + F_scomylong) > abs(F_saylong + F_spylong + F_spring1)
    sigma_s1y = (F_tt + F_scomylong)/(Superior.B1*Superior.T);
    sigma_srupture = (F_tt + F_scomylong)/(Superior.B1*Superior.T); % need to subtract 2*Bearing.D*Superior.T from area
else
    sigma_s1y = (F_saylong + F_spylong + F_spring1)/(Superior.B1*Superior.T);
    sigma_srupture = (F_saylong + F_spylong + F_spring1)/(Superior.B1*Superior.T); % need to subtract 2*Bearing.D*Superior.T from area
end

if abs(F_tt) > abs(F_scomylong + F_saylong + F_spylong + F_spring1)
    sigma_s2y = F_tt / (Superior.B2*Superior.T);
    sigma_s3y = F_tt / (Superior.B3*Superior.T);
else
    sigma_s2y = (F_scomylong + F_saylong + F_spylong + F_spring1) / (Superior.B2*Superior.T);
    sigma_s3y = (F_scomylong + F_saylong + F_spylong + F_spring1) / (Superior.B3*Superior.T);
end

% bending
moment_s1 = Superior.I*Superior.alpha(3) + (Superior.B3/2)*F_tt - (Superior.B3/2 - Superior.B2/2)*(F_scomylong + F_saylong + F_spylong + F_spring1);
moment_s2 = Superior.I*Superior.alpha(3) - (Superior.L/2)*F_saylong - (Superior.H4 - Superior.com(2) - Superior.H1/2)*F_saxlong - (Superior.L/2)*F_spylong + (Superior.H4 - Superior.com(2) - Superior.H1/2)*F_spxlong + ((Superior.L/2)-0.4*Superior.L)*F_spring1 - Superior.com(2)*F_tn;

sigma_sbend1 = -moment_s1*((Superior.H4-Superior.H3)/2) / ((Superior.B3*(Superior.H4-Superior.H3)^3)/12);
%sigma_ibend2 = -moment_s2 * ?y? / ?I?

% shear
if abs(F_tn + F_scomxlong) > abs(F_saxlong + F_spxlong)
    tau_s1 = (F_tn + F_scomxlong)/(Superior.B1*Superior.T);
else
    tau_s1 = (F_saxlong + F_spxlong)/(Superior.B1*Superior.T);
end

if abs(F_tn) > abs(F_scomxlong + F_saxlong + F_spxlong)
    tau_s2 = (F_tn)/(Superior.B2*Superior.T);
    tau_s3 = (F_tn)/(Superior.B3*Superior.T);
else
    tau_s2 = (F_scomxlong + F_saxlong + F_spxlong)/(Superior.B2*Superior.T);
    tau_s3 = (F_scomxlong + F_saxlong + F_spxlong)/(Superior.B3*Superior.T);
end

% Safety Factors


%% Inferior Link




%% Anterior Link

% longitudinal forces
syms F_acomxlong F_acomylong F_asxlong F_asylong F_aixlong F_aiylong

% stresses
syms sigma_ax sigma_ay sigma_abend tau_a1 tau_a2 sigma_arupture

% longitudinal force calculations
% F_acomxlong = 
% F_acomylong = 
% F_asxlong = 
% F_axylong = 
% F_aixlong = 
% F_aiylong = 

% stress calculations
% along x long


% along y long and rupture


% bending


% shear


% Safety Factors



%% Posterior Link
% longitudinal forces
syms F_acomxlong F_acomylong F_asxlong F_asylong F_aixlong F_aiylong

% stresses
syms sigma_ax sigma_ay sigma_abend tau_a1 tau_a2 sigma_arupture

% longitudinal force calculations
% F_acomxlong = 
% F_acomylong = 
% F_asxlong = 
% F_axylong = 
% F_aixlong = 
% F_aiylong = 

% stress calculations
% along x long


% along y long and rupture


% bending


% shear


% Safety Factors





%% Velcro




%% Springs




%% Bolts




%% Bearings




%% return or modifying object values
% we will figure this out soon



%% Safety Factors Calculations




end

